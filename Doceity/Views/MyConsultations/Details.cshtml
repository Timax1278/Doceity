@* File: Views/MyConsultations/Details.cshtml *@
@model Doceity.Models.ConsultationRequest
@using Doceity.Models // Per l'enum ConsultationRequestStatus
@inject UserManager<ApplicationUser> UserManager // Inietta per ottenere l'username dell'utente corrente

@{
    ViewData["Title"] = "Dettaglio Richiesta di Consulenza";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var currentUser = await UserManager.GetUserAsync(User);
    var currentUserNameForVideo = currentUser?.UserName ?? "user_not_found";
}

<h1>@ViewData["Title"]</h1>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">@TempData["ErrorMessage"]</div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["SuccessMessage"]</div>
}
@if (TempData["WarningMessage"] != null)
{
    <div class="alert alert-warning" role="alert">@TempData["WarningMessage"]</div>
}


@if (Model == null)
{
    <div class="alert alert-warning">Richiesta non trovata o non autorizzato a visualizzarla.</div>
    <p><a asp-action="Index" class="btn btn-secondary">Torna a Le Mie Richieste</a></p>
}
else
{
    <div>
        <h4>Richiesta #@Model.ConsultationRequestId</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-3">Esperto Contattato</dt>
            <dd class="col-sm-9">@Model.Expert?.FirstName @Model.Expert?.LastName (@Model.Expert?.Email)</dd>

            <dt class="col-sm-3">Servizio Specifico Richiesto</dt>
            <dd class="col-sm-9">@(Model.RequestedExpertService?.Title ?? "Nessun servizio specifico")</dd>

            <dt class="col-sm-3">Data/Ora Proposta (UTC)</dt>
            <dd class="col-sm-9">@Model.ProposedDateTime.ToString("dddd, dd MMMM yyyy 'alle' HH:mm")</dd>

            <dt class="col-sm-3">Tuo Messaggio Iniziale</dt>
            <dd class="col-sm-9" style="white-space: pre-wrap;">@(string.IsNullOrWhiteSpace(Model.UserMessage) ? "Nessun messaggio fornito." : Model.UserMessage)</dd>

            <dt class="col-sm-3">Data Invio Richiesta</dt>
            <dd class="col-sm-9">@Model.RequestTimestamp.ToLocalTime().ToString("g")</dd>

            <dt class="col-sm-3">Stato Attuale</dt>
            <dd class="col-sm-9">
                <span class="badge @GetStatusBadgeClass(Model.Status)">
                    @Html.DisplayFor(model => model.Status)
                </span>
            </dd>

            @if (Model.ResponseTimestamp.HasValue)
            {
                <dt class="col-sm-3">Data Risposta Esperto</dt>
                <dd class="col-sm-9">@Model.ResponseTimestamp.Value.ToLocalTime().ToString("g")</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.ExpertResponseMessage))
            {
                <dt class="col-sm-3">Messaggio/Motivazione dall'Esperto</dt>
                <dd class="col-sm-9" style="white-space: pre-wrap;">@Model.ExpertResponseMessage</dd>
            }

            @if (!string.IsNullOrWhiteSpace(Model.VideoRoomIdentifier) && Model.Status == ConsultationRequestStatus.Accepted)
            {
                <dt class="col-sm-3">Stanza Video</dt>
                <dd class="col-sm-9">@Model.VideoRoomIdentifier</dd>
            }
        </dl>
    </div>
    <hr />
    <div class="mt-3">
        @if (Model.Status == ConsultationRequestStatus.Pending)
        {
            <form asp-action="CancelRequest" asp-route-id="@Model.ConsultationRequestId" method="post" class="d-inline me-2">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-warning"
                        onclick="return confirm('Sei sicuro di voler cancellare questa richiesta di consulenza? L\'azione non può essere annullata.');">
                    Cancella Richiesta
                </button>
            </form>
        }
        @* --- PULSANTE "ENTRA VIDEO" PER L'UTENTE --- *@
        @if (Model.Status == ConsultationRequestStatus.Accepted && Model.IsSessionJoinable && !string.IsNullOrEmpty(Model.VideoRoomIdentifier))
        {
            <a asp-controller="Video" asp-action="Room"
               asp-route-roomName="@Model.VideoRoomIdentifier"
               asp-route-userName="@currentUserNameForVideo"
               class="btn btn-danger me-2" title="Entra nella Consulenza Video">
                <i class="bi bi-camera-video-fill"></i> Entra Video
            </a>
        }
        else if (Model.Status == ConsultationRequestStatus.Accepted && Model.ProposedDateTime > DateTime.UtcNow)
        {
            <button type="button" class="btn btn-outline-secondary me-2" disabled><small>(Consulenza accettata, non ancora live)</small></button>
        }
        <a asp-action="Index" class="btn btn-secondary">Torna a Le Mie Richieste</a>
    </div>
}


@functions {
    string GetStatusBadgeClass(ConsultationRequestStatus status)
    {
        return status switch
        {
            ConsultationRequestStatus.Pending => "bg-warning text-dark",
            ConsultationRequestStatus.Accepted => "bg-success",
            ConsultationRequestStatus.Rejected => "bg-danger",
            ConsultationRequestStatus.Cancelled => "bg-secondary",
            _ => "bg-light text-dark",
        };
    }
}