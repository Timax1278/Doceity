@* File: Views/MyConsultations/Index.cshtml *@
@model IEnumerable<Doceity.Models.ConsultationRequest>
@using Doceity.Models // Per l'enum ConsultationRequestStatus
@inject UserManager<ApplicationUser> UserManager // Inietta per ottenere l'username dell'utente corrente

@{
    ViewData["Title"] = "Le Mie Richieste di Consulenza";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    var currentUser = await UserManager.GetUserAsync(User);
    var currentUserNameForVideo = currentUser?.UserName ?? "user_not_found";
}

<h1>@ViewData["Title"]</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success" role="alert">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger" role="alert">@TempData["ErrorMessage"]</div>
}
@if (TempData["WarningMessage"] != null)
{
    <div class="alert alert-warning" role="alert">@TempData["WarningMessage"]</div>
}


@if (!Model.Any())
{
    <div class="alert alert-info" role="alert">
        Non hai ancora inviato nessuna richiesta di consulenza.
        <a asp-controller="FindExperts" asp-action="Index" class="alert-link">Trova un esperto</a> per iniziare!
    </div>
}
else
{
    <p>Qui puoi vedere lo stato delle consulenze che hai richiesto.</p>
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Esperto</th>
                    <th>Servizio Richiesto</th>
                    <th>Data/Ora Proposta (UTC)</th>
                    <th>Stato</th>
                    <th>Risposta Esperto</th>
                    <th>Azioni</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var request in Model)
                {
                    <tr>
                        <td>
                            @if (request.Expert != null)
                            {
                                @(request.Expert.FirstName) @(request.Expert.LastName)
                            }
                            else
                            {
                                <span class="text-muted">N/A</span>
                            }
                        </td>
                        <td>@(request.RequestedExpertService?.Title ?? "Generica")</td>
                        <td>@request.ProposedDateTime.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(request.Status)">
                                @Html.DisplayFor(modelItem => request.Status)
                            </span>
                        </td>
                        <td style="white-space: pre-wrap; max-width: 300px;">@(request.ExpertResponseMessage ?? "Nessuna risposta ancora.")</td>
                        <td>
                            <div class="btn-group-vertical btn-group-sm" role="group" aria-label="Azioni Richiesta">
                                <a asp-action="Details" asp-route-id="@request.ConsultationRequestId" class="btn btn-info">Dettagli</a>
                                @if (request.Status == ConsultationRequestStatus.Pending)
                                {
                                    <form asp-action="CancelRequest" asp-route-id="@request.ConsultationRequestId" method="post" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-warning w-100 mt-1"
                                                onclick="return confirm('Sei sicuro di voler cancellare questa richiesta di consulenza? L\'azione non può essere annullata.');">
                                            Cancella
                                        </button>
                                    </form>
                                }
                                @* --- PULSANTE "ENTRA VIDEO" PER L'UTENTE --- *@
                                @if (request.Status == ConsultationRequestStatus.Accepted && request.IsSessionJoinable && !string.IsNullOrEmpty(request.VideoRoomIdentifier))
                                {
                                    <a asp-controller="Video" asp-action="Room"
                                       asp-route-roomName="@request.VideoRoomIdentifier"
                                       asp-route-userName="@currentUserNameForVideo"
                                       class="btn btn-danger mt-1" title="Entra nella Consulenza Video">
                                        <i class="bi bi-camera-video-fill"></i> Entra Video
                                    </a>
                                }
                                else if (request.Status == ConsultationRequestStatus.Accepted && request.ProposedDateTime > DateTime.UtcNow)
                                {
                                    <button type="button" class="btn btn-outline-secondary mt-1 w-100" disabled><small>(Accettata, non ancora live)</small></button>
                                }
                                @* --- FINE PULSANTE "ENTRA VIDEO" --- *@
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@functions {
    string GetStatusBadgeClass(ConsultationRequestStatus status)
    {
        return status switch
        {
            ConsultationRequestStatus.Pending => "bg-warning text-dark",
            ConsultationRequestStatus.Accepted => "bg-success",
            ConsultationRequestStatus.Rejected => "bg-danger",
            ConsultationRequestStatus.Cancelled => "bg-secondary",
            _ => "bg-light text-dark",
        };
    }
}