@* File: Views/AdminSpecializations/Delete.cshtml *@
@model Doceity.Models.Specialization

@{
    ViewData["Title"] = "Elimina Specializzazione";
    Layout = "~/Pages/Shared/_Layout.cshtml"; // O il tuo layout admin
}

<h1>@ViewData["Title"]</h1>
<h3 class="text-danger">Sei sicuro di voler eliminare questa specializzazione?</h3>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

@if (Model == null)
{
    <div class="alert alert-warning mt-3">Specializzazione non trovata.</div>
}
else
{
    <div class="mt-3">
        <h4>@Model.Name</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Description)</dt>
            <dd class="col-sm-9">@(string.IsNullOrWhiteSpace(Model.Description) ? "N/D" : Model.Description)</dd>
        </dl>
        @if (Model.ExpertSpecializations != null && Model.ExpertSpecializations.Any())
        {
            <div class="alert alert-warning">
                <strong>Attenzione:</strong> Questa specializzazione è assegnata a <strong>@Model.ExpertSpecializations.Count</strong> esperto/i.
                Se hai impostato regole restrittive, l'eliminazione potrebbe non essere permessa o potresti dover prima rimuovere l'assegnazione dagli esperti.
                Il controller attuale impedisce l'eliminazione se ci sono esperti associati.
            </div>
        }
        <hr />
        <form asp-action="Delete" method="post">
            @* Il metodo POST punterà a DeleteConfirmed grazie a [ActionName("Delete")] *@
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="SpecializationId" />
            <button type="submit" class="btn btn-danger">Elimina Definitivamente</button> |
            <a asp-action="Index" class="btn btn-secondary">Annulla</a>
        </form>
    </div>
}